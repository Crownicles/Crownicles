name: Module Tests
on:
  pull_request:
    branches: [ '**' ]
    paths: [ Lib/**, Discord/**, Core/** ]
  push:
    branches: [ develop, master ]
    paths: [ Lib/**, Discord/**, Core/** ]
  workflow_dispatch:

jobs:
  test-lib-module:
    runs-on: ubuntu-latest
    continue-on-error: false
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup PNPM
        run: |
          npm install --global corepack@latest
          corepack enable
          corepack use pnpm@latest-10

      - name: Cache PNPM dependencies for Lib
        uses: actions/cache@v4
        with:
          path: |
            ./Lib/node_modules
            ./Lib/pnpm-lock.yaml
          key: ${{ runner.os }}-lib-deps-${{ hashFiles('Lib/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-lib-deps-

      - name: Install dependencies and run tests for Lib
        working-directory: ./Lib
        run: |
          pnpm install
          pnpm test

      - name: Upload Lib test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lib-test-results
          path: Lib/test-results.xml

  test-discord-module:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup PNPM
        run: |
          npm install --global corepack@latest
          corepack enable
          corepack use pnpm@latest-10

      - name: Cache PNPM dependencies for Discord
        uses: actions/cache@v4
        with:
          path: |
            ./Discord/node_modules
            ./Discord/pnpm-lock.yaml
          key: ${{ runner.os }}-discord-deps-${{ hashFiles('Discord/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-discord-deps-

      - name: Install dependencies and run tests for Discord
        working-directory: ./Discord
        run: |
          pnpm install
          pnpm test

      - name: Upload Discord test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: discord-test-results
          path: Discord/test-results.xml

  test-core-module:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup PNPM
        run: |
          npm install --global corepack@latest
          corepack enable
          corepack use pnpm@latest-10

      - name: Cache PNPM dependencies for Core
        uses: actions/cache@v4
        with:
          path: |
            ./Core/node_modules
            ./Core/pnpm-lock.yaml
          key: ${{ runner.os }}-core-deps-${{ hashFiles('Core/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-core-deps-

      - name: Install dependencies and run tests for Core
        working-directory: ./Core
        run: |
          pnpm install
          pnpm test

      - name: Upload Core test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: core-test-results
          path: Core/test-results.xml