name: Module Tests
on:
  pull_request:
    branches: [ '**' ]
    paths: [ Lib/**, Discord/**, Core/** ]
  push:
    branches: [ develop, master ]
    paths: [ Lib/**, Discord/**, Core/** ]
  workflow_dispatch:

jobs:
  test-lib-module:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js & pnpm
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install deps for Lib
        working-directory: ./Lib
        run: pnpm install

      - name: Run tests with coverage for Lib
        working-directory: ./Lib
        run: pnpm test

      - name: Upload Lib test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lib-test-results
          path: Lib/test-results.xml

  test-discord-module:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js & pnpm
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install deps for Discord
        working-directory: ./Discord
        run: pnpm install

      - name: Run tests with coverage for Discord
        working-directory: ./Discord
        run: pnpm test

      - name: Upload Discord test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: discord-test-results
          path: Discord/test-results.xml

  test-core-module:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js & pnpm
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'

      - name: Install deps for Core
        working-directory: ./Core
        run: pnpm install

      - name: Run tests with coverage for Core
        working-directory: ./Core
        run: pnpm test

      - name: Upload Core test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: core-test-results
          path: Core/test-results.xml

  publish-test-results:
    runs-on: ubuntu-latest
    needs: [test-lib-module, test-discord-module, test-core-module]
    if: always()
    steps:
      - name: Download all test results artifacts
        uses: actions/download-artifact@v4
        with:
          path: test-results

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: test-results/**/*.xml