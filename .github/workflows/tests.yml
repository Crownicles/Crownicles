name: Module Tests

on:
  pull_request:
    branches: [ '**' ]
    paths: [ Lib/**, Discord/**, Core/** ]
  push:
    branches: [ develop, master ]
    paths: [ Lib/**, Discord/**, Core/** ]
  workflow_dispatch:

jobs:
  test-all-modules:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Setup PNPM
        run: |
          npm install --global corepack@latest
          corepack enable
          corepack use pnpm@latest-10

      - name: Cache PNPM dependencies
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
            **/pnpm-lock.yaml
          key: ${{ runner.os }}-all-deps-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-all-deps-

      - name: Install dependencies for all modules
        run: |
          pnpm --dir ./Lib install
          pnpm --dir ./Discord install
          pnpm --dir ./Core install

      - name: Run Lib tests
        run: pnpm --dir ./Lib test

      - name: Upload Lib test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lib-test-results
          path: Lib/test-results.xml

      - name: Run Discord tests
        run: pnpm --dir ./Discord test

      - name: Upload Discord test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: discord-test-results
          path: Discord/test-results.xml

      - name: Run Core tests
        run: pnpm --dir ./Core test

      - name: Upload Core test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: core-test-results
          path: Core/test-results.xml
